server.port=8001
#resilience4j.circuitbreaker.instances.backendWhichAlwaysThrowsException.sliding-window-type=count-based
resilience4j.circuitbreaker.instances.backendWhichAlwaysThrowsException.sliding-window-size=10
resilience4j.circuitbreaker.instances.backendWhichAlwaysThrowsException.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.instances.backendWhichAlwaysThrowsException.slowCallDurationThreshold=2000
#resilience4j.circuitbreaker.instances.backendWhichAlwaysThrowsException.failure-rate-threshold=30
resilience4j.circuitbreaker.instances.backendWhichAlwaysThrowsException.wait-duration-in-open-state=6000

resilience4j.circuitbreaker.instances.backendWhichThrowsExceptionOnEvenNumbers.sliding-window-type=count-based
#resilience4j.circuitbreaker.instances.backendWhichThrowsExceptionOnEvenNumbers.sliding-window-size=10
resilience4j.circuitbreaker.instances.backendWhichThrowsExceptionOnEvenNumbers.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.backendWhichThrowsExceptionOnEvenNumbers.slowCallDurationThreshold=2000
#resilience4j.circuitbreaker.instances.backendWhichThrowsExceptionOnEvenNumbers.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.backendWhichThrowsExceptionOnEvenNumbers.wait-duration-in-open-state=6000

#In a production system you should not set minimumNumberOfCalls to 1. For testing it is okay, but 3 is better.

#Let's assume you have minimumNumberOfCalls=3, slidingWindowSize = 10 and slidingWindowType = COUNT_BASED:
#That means the CircuitBreaker is calculating the failure rate and slow call rate based on the last 10 calls, as soon as 3 calls have been recorded.

#Let's assume 2 calls are slow and 1 call is fast:
#That means the slow call rate is above 50% and the CircuitBreaker will transition to OPEN.

#The minimumNumberOfCalls setting makes even more sense, if slidingWindowType = TIME_BASED and the failure rate is calculated based on the calls from the last N seconds.
#

resilience4j.retry.instances.backendWhichThrowsExceptionAfterGivenCount.max-attempts=3

resilience4j.retry.instances.backendWhichThrowsValidationException.max-attempts=3
resilience4j.retry.instances.backendWhichThrowsValidationException.ignore-exceptions=java.io.IOException